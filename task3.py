"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""
def divison(a, b):
    try:
        return a / b
    except ZeroDivisionError:
        return "Деление на 0!"

print(divison(a=int(input("Введите значение a: ")), b=int(input("Введите значение b: "))))

"""
2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры
как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.
"""
def user_info(**kwargs):
    print(f"Имя - {kwargs['firstname']}; Фамилия - {kwargs['lastname']}; Год рождения - {kwargs['year_of_birth']}; "
          f"Город проживания - {kwargs['city']}; email - {kwargs['email']}; номер телефона - {kwargs['phone_number']}")


user_info(firstname="Ivan", lastname="Ivanov", year_of_birth="1990", city="Omsk", email="ivan@gmail.com", phone_number="89093526565")
"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
"""
def func_max(*args):
    print(sum(sorted(list(args), reverse = True)[:2]))

func_max(55, 8, 100)
"""
4. Программа принимает действительное положительное число x и целое отрицательное число y.
Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
При решении задания нужно обойтись без встроенной функции возведения числа в степень.
"""
def my_func(x, y):
    try:
        if y < 0:
            res = 1
            for i in range(y, 0):
                res = res * x
            res = 1 / res
            return res
        else:
            return "Второе число должно быть отрицательным"
    except ZeroDivisionError:
        return "Деление на 0"
    except TypeError:
        return "Неверный ввод"

x = 10
y = -3
print(my_func(x, y))
"""
5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter
должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введён после нескольких чисел, то вначале нужно добавить
сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""
def get_sum(sum = 0):
    my_list = input("Введите числа, разделенные пробелами. Для выхода введите 'q': ").split()
    for el in my_list:
        if el != "q":
            sum += int(el)
        else:
            break
    print(sum)
    if "q" in my_list:
        exit("Завершение работы программы")
    else:
        get_sum(sum)

get_sum()
"""
6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же,
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
"""
def int_func(string):
    print(string.title())

int_func(input("Введите строку: "))
"""
7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом.
Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки, но каждое
слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().
"""
def int_func(string):
    print(string.title())

int_func("подходит и для строки из слов, разделённых пробелом. каждое слово начинается с заглавной буквы)")
